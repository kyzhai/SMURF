%!PS-Adobe-2.0 EPSF-2.0
%%Title: /Users/vbui/projects/columbia/compilers/smurf-master/SMURF/Docs/proposal/figures/example1.dia
%%Creator: Dia v0.97.1
%%CreationDate: Wed Sep 25 22:54:21 2013
%%For: vbui
%%Orientation: Portrait
%%Magnification: 1.0000
%%BoundingBox: 0 0 776 887
%%BeginSetup
%%EndSetup
%%EndComments
%%BeginProlog
[ /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E
/F /G /H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W /X /Y
/Z /bracketleft /backslash /bracketright /asciicircum /underscore /quoteleft /a /b /c
/d /e /f /g /h /i /j /k /l /m
/n /o /p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section /dieresis /copyright
/ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron /degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf
/threequarters /questiondown /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde
/Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave /Uacute /Ucircumflex
/Udieresis /Yacute /Thorn /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
/ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave
/uacute /ucircumflex /udieresis /yacute /thorn /ydieresis] /isolatin1encoding exch def
/cp {closepath} bind def
/c {curveto} bind def
/f {fill} bind def
/a {arc} bind def
/ef {eofill} bind def
/ex {exch} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth pop} bind def
/tr {translate} bind def

/ellipsedict 8 dict def
ellipsedict /mtrx matrix put
/ellipse
{ ellipsedict begin
   /endangle exch def
   /startangle exch def
   /yrad exch def
   /xrad exch def
   /y exch def
   /x exch def   /savematrix mtrx currentmatrix def
   x y tr xrad yrad sc
   0 0 1 startangle endangle arc
   savematrix setmatrix
   end
} def

/mergeprocs {
dup length
3 -1 roll
dup
length
dup
5 1 roll
3 -1 roll
add
array cvx
dup
3 -1 roll
0 exch
putinterval
dup
4 2 roll
putinterval
} bind def
/Times-Roman-latin1
    /Times-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-Italic-latin1
    /Times-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-Bold-latin1
    /Times-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-BoldItalic-latin1
    /Times-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-Gothic-latin1
    /AvantGarde-Gothic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-BookOblique-latin1
    /AvantGarde-BookOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-Demi-latin1
    /AvantGarde-Demi findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-DemiOblique-latin1
    /AvantGarde-DemiOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-Light-latin1
    /Bookman-Light findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-LightItalic-latin1
    /Bookman-LightItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-Demi-latin1
    /Bookman-Demi findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-DemiItalic-latin1
    /Bookman-DemiItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-latin1
    /Courier findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-Oblique-latin1
    /Courier-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-Bold-latin1
    /Courier-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-BoldOblique-latin1
    /Courier-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-latin1
    /Helvetica findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Oblique-latin1
    /Helvetica-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Bold-latin1
    /Helvetica-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-BoldOblique-latin1
    /Helvetica-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-latin1
    /Helvetica-Narrow findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-Oblique-latin1
    /Helvetica-Narrow-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-Bold-latin1
    /Helvetica-Narrow-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-BoldOblique-latin1
    /Helvetica-Narrow-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchlbk-Roman-latin1
    /NewCenturySchlbk-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchlbk-Italic-latin1
    /NewCenturySchlbk-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchlbk-Bold-latin1
    /NewCenturySchlbk-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchlbk-BoldItalic-latin1
    /NewCenturySchlbk-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Roman-latin1
    /Palatino-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Italic-latin1
    /Palatino-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Bold-latin1
    /Palatino-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-BoldItalic-latin1
    /Palatino-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Symbol-latin1
    /Symbol findfont
definefont pop
/ZapfChancery-MediumItalic-latin1
    /ZapfChancery-MediumItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/ZapfDingbats-latin1
    /ZapfDingbats findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
28.346000 -28.346000 scale
-0.920250 -31.795050 translate
%%EndProlog


0.050000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 1.250200 0.600000 m 26.300200 0.550000 l s
/Helvetica-latin1 ff 0.560000 scf sf
(1:  //Create a list of single note chords that alternate between registers 1/-1       ) 1.045000 1.965000 m
 gs 1 -1 sc sh gr
(2:  genAltChords::[int] -> [Chord]                                                    ) 1.045000 2.765000 m
 gs 1 -1 sc sh gr
(3:  genAltChords [] = []                                                              ) 1.045000 3.565000 m
 gs 1 -1 sc sh gr
(4:  genAltChords \(x:y:ys\) = [\(x,Time 4,1\)]:[\(y,Time 4,-1\)]:genAltChords ys            ) 1.045000 4.365000 m
 gs 1 -1 sc sh gr
(5:  genAltChords \(x:xs\) = [[\(x,Time 4,1\)]]                                            ) 1.045000 5.165000 m
 gs 1 -1 sc sh gr
(6:                                                                                    ) 1.045000 5.965000 m
 gs 1 -1 sc sh gr
(7:  //Create a list of measures consisting of 4 chords per measure                    ) 1.045000 6.765000 m
 gs 1 -1 sc sh gr
(8:  gen4cMeasures::[Chord] -> [Measure]                                               ) 1.045000 7.565000 m
 gs 1 -1 sc sh gr
(9:  gen4cMeasures [] = []                                                             ) 1.045000 8.365000 m
 gs 1 -1 sc sh gr
(10: gen4cMeasures \(w:x:y:z:zs\) =                                                      ) 1.045000 9.165000 m
 gs 1 -1 sc sh gr
(11:  if fillMeasure [w,x,y,z] then [w,x,y,z]:gen4cMeasures zs else gen4cMeasures zs  ) 1.045000 9.965000 m
 gs 1 -1 sc sh gr
(12: gen4cMeasures \(w:ws\) =                                                            ) 1.045000 10.765000 m
 gs 1 -1 sc sh gr
(13:  let ms = [w,\(-1,4,0\),\(-1,4,0\),\(-1,4,0\)]                                          ) 1.045000 11.565000 m
 gs 1 -1 sc sh gr
(14:  in if fillMeasure ms then ms:gen4cMeasures ws else gen4cMeasures ws              ) 1.045000 12.365000 m
 gs 1 -1 sc sh gr
(15: gen4cMeasures \(w:x:xs\) =                                                          ) 1.045000 13.165000 m
 gs 1 -1 sc sh gr
(16:  let ms = [w,x,\(-1,4,0\),\(-1,4,0\)]                                                 ) 1.045000 13.965000 m
 gs 1 -1 sc sh gr
(17:  in if fillMeasure ms then ms:gen4cMeasures xs else gen4cMeasures xs              ) 1.045000 14.765000 m
 gs 1 -1 sc sh gr
(18: gen4cMeasures \(w:x:y:ys\) =                                                        ) 1.045000 15.565000 m
 gs 1 -1 sc sh gr
(19:  let ms = [w,x,y,\(-1,4,0\)]                                                        ) 1.045000 16.365000 m
 gs 1 -1 sc sh gr
(20:  in if fillMeasure ms then ms:gen4cMeasures ys else gen4cMeasures ys              ) 1.045000 17.165000 m
 gs 1 -1 sc sh gr
(21:                                                                                   ) 1.045000 17.965000 m
 gs 1 -1 sc sh gr
(22: /*Create a list of measures by combining the resulting measure\(s\)                 ) 1.045000 18.765000 m
 gs 1 -1 sc sh gr
(23:   produced from tone rows r1 and r2. */                                           ) 1.045000 19.565000 m
 gs 1 -1 sc sh gr
(24: makeAltScore::[int]->[int]->[Measure]                                             ) 1.045000 20.365000 m
 gs 1 -1 sc sh gr
(25: makeAltScore r1 r2 =                                                              ) 1.045000 21.165000 m
 gs 1 -1 sc sh gr
(26:  let ch1 = genAltChords r1                                                        ) 1.045000 21.965000 m
 gs 1 -1 sc sh gr
(27:      ch2 = genAltChords r2                                                        ) 1.045000 22.765000 m
 gs 1 -1 sc sh gr
(28:      m1  = gen4cMeasures ch1                                                      ) 1.045000 23.565000 m
 gs 1 -1 sc sh gr
(29:      m2  = gen4cMeasures ch2                                                      ) 1.045000 24.365000 m
 gs 1 -1 sc sh gr
(30:  in m1 ++ m2                                                                      ) 1.045000 25.165000 m
 gs 1 -1 sc sh gr
(31:                                                                                   ) 1.045000 25.965000 m
 gs 1 -1 sc sh gr
(32: //Create a serial score                                                           ) 1.045000 26.765000 m
 gs 1 -1 sc sh gr
(33: let prime = [0,2,4,6,8,10,1,3,5,7,9,11]                                           ) 1.045000 27.565000 m
 gs 1 -1 sc sh gr
(34:     p3 = trans 3 prime                                                            ) 1.045000 28.365000 m
 gs 1 -1 sc sh gr
(35:     i3 = inver p3                                                                 ) 1.045000 29.165000 m
 gs 1 -1 sc sh gr
(36:     score = makeAltScore p3 i3                                                    ) 1.045000 29.965000 m
 gs 1 -1 sc sh gr
(37: in genScore score          ) 1.045000 30.765000 m
 gs 1 -1 sc sh gr
0.050000 slw
[] 0 sd
[] 0 sd
0 slc
n 0.945300 31.770000 m 25.995300 31.720000 l s
showpage
