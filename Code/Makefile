OBJ=ast.cmo \
	sast.cmo \
	scanner.cmo \
	parser.cmo \
	util.cmo \
	test.cmo \
	smurf.cmo

all: $(OBJ)
	ocamlc -o test util.cmo parser.cmo scanner.cmo ast.cmo test.cmo
	ocamlc -o smurf util.cmo parser.cmo scanner.cmo ast.cmo sast.cmo smurf.cmo 

	

.SUFFIXES: .ml .cmo .cmi .mll .mly .mli
.PRECIOUS: %.ml %.mli %.cmo

.ml.cmo:
	ocamlc -c $<

.mli.cmi:
	ocamlc -c $<
    
.mll.ml:
	ocamllex $<

.mly.ml:
	ocamlyacc -v $<

.mly.mli:
	ocamlyacc -v $<

clean:
	rm -f *.cmi *.cmo parser.ml scanner.ml *.output parser.mli test smurf

TestDir = ./parser-tests
cases = $(shell find $(TestDir) -name "*.sm" | sort)
case = $(cases:%.sm=%)

%: %.sm $(TARGET)
	./$(TARGET) < $<

autotest: $(case) $(TARGET)

# Generated by ocamldep
ast.cmo : util.cmo 
ast.cmx : util.cmx
parser.cmo : util.cmo ast.cmo parser.cmi
parser.cmx : util.cmx ast.cmx parser.cmi
parser.cmi : util.cmo ast.cmo
sast.cmo : util.cmo ast.cmo
sast.cmx : util.cmx ast.cmx
scanner.cmo : util.cmo parser.cmi
scanner.cmx : util.cmx parser.cmx
smurf.cmo : util.cmo scanner.cmo sast.cmo parser.cmi
smurf.cmx : util.cmx scanner.cmx sast.cmx parser.cmx
test.cmo : util.cmo scanner.cmo parser.cmi ast.cmo
test.cmx : util.cmx scanner.cmx parser.cmx ast.cmx
util.cmo :
util.cmx :

